function varargout=simplePlotter(projectionStructure,colorAreas)
    %% Plot projected Allen Atlas generated by aratools.projectAtlas.generate
    %
    % function H=aratools.projectAtlas.simplePlotter(projectionStructure,colorAreas)
    % 
    %
    % Purpose
    % Draw the outlines around each brain area found by aratools.projectAtlas.generate
    % Either draw all area boundaries in the same colour or, optionally, draw each 
    % boundary in a different color.
    %
    %
    % Inputs [required]
    %   projectionStructure - output of aratools.projectAtlas.generate
    %
    % Inputs [optional]
    %   colorAreas - [optional, false by default]. 
    %                If false, the areas are plotted as near-white lines on a gray background. 
    %                If true, each area outline is drawn in a different color.
    %
    %
    % Outputs
    % H - optionally returns the handle to the plotted areas
    %
    %
    % Example
    % ATLAS=mhd_read('~/tvtoucan/Mrsic-Flogel/ReferenceAtlas/ARA_CCFv3/ARA_25_micron_mhd/atlas_smooth1_corrected.mhd');
    % out = aratools.projectAtlas.generate(ATLAS);
    % aratools.projectAtlas.simplePlotter(out)
    %
    % 
    %
    % Rob Campbell - 2017
    %
    %
    % Also see:
    % aratools.projectAtlas.generate


    if nargin==0
        help mfilename
        return
    end

    if nargin<2
        colorAreas=false;
    end


    %Set up the optional color-coding
    n=height(projectionStructure.structureList);
    if colorAreas
        col = parula(n);
    else
        col = ones(n,3)*0.75; %Default color if no coloring
    end

    set(gcf,'Color',[1,1,1]*0.15) %The colors look best with a dark background (which is why the default color is light gray)
    hold on

    H=[];
    for ii = 1:n
       B = projectionStructure.structureList.areaBoundaries{ii}; %Collect the border data for this area
       for k = 1:length(B)
         thisBoundary = B{k};
         H(end+1)=plot(thisBoundary(:,2), thisBoundary(:,1), 'color', col(ii,:), 'LineWidth', 1);
       end
    end

    hold off


    axis equal off

    if nargout>0
        varargout{1}=H;
    end
